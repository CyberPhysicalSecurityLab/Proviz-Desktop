package proviz;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import proviz.settings.NetworkSettings;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.HashMap;

/**
 * Created by Burak on 3/16/17.
 */
public class SettingsScreen extends JDialog {
    private JPanel menuView;
    private JPanel menuDetailView;
    private JPanel menuTextAreaOut;
    private JPanel bottomBar;
    private JPanel mainpanel;
    private JPanel menuTextAreaInner;
    private JButton cancelButton;
    private JButton applyButton;
    private JTextField tabletIpAddressTextField;
    private JLabel tabletIpAddressLabel;
    private JLabel selectedLabel;
    private ArrayList<SettingsViewListener> settingsViewListeners;


    private HashMap<String, JPanel> settingViews;


    public SettingsScreen() {
        settingsViewListeners = new ArrayList<>();
        settingViews = new HashMap<>();
        setContentPane(mainpanel);
        initSettingsViews();
    }

    public void initSettingsViews() {
        JLabel label = new JLabel("Network Settings");
        label.setOpaque(false);
        label.setBackground(new Color(200, 221, 242));


        label.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                System.out.println("One click");
                highLightSelection((JLabel) e.getSource());
                if (selectedLabel != null)
                    removeHighLightSelection(selectedLabel);
                selectedLabel = (JLabel) e.getSource();
                NetworkSettings networkSettings = new NetworkSettings();
                GridConstraints gridLayoutConstrainForNetworkSettings = new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false);
                menuDetailView.add(networkSettings, gridLayoutConstrainForNetworkSettings);
                menuDetailView.revalidate();
            }

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseReleased(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {

            }

            @Override
            public void mouseExited(MouseEvent e) {

            }
        });

        GridConstraints gridConstraints = new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false);

        menuTextAreaInner.add(label, gridConstraints);

    }

    private void highLightSelection(JComponent component) {
        component.setOpaque(true);

    }

    private void removeHighLightSelection(JComponent component) {
        component.setOpaque(false);
    }

    public void addSettingsSubscribers(SettingsViewListener settingsViewListener) {
        settingsViewListeners = new ArrayList<>();

    }

    public static void main(String[] args) {
        SettingsScreen dialog = new SettingsScreen();
        dialog.pack();
        dialog.setVisible(true);
        dialog.setSize(new Dimension(840, 680));
        dialog.show();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainpanel = new JPanel();
        mainpanel.setLayout(new GridBagLayout());
        mainpanel.setMinimumSize(new Dimension(640, 480));
        menuView = new JPanel();
        menuView.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 0.25;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainpanel.add(menuView, gbc);
        menuTextAreaOut = new JPanel();
        menuTextAreaOut.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 0.99;
        gbc.fill = GridBagConstraints.BOTH;
        menuView.add(menuTextAreaOut, gbc);
        menuTextAreaOut.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-11447983)), null));
        menuTextAreaInner = new JPanel();
        menuTextAreaInner.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        menuTextAreaOut.add(menuTextAreaInner, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        bottomBar = new JPanel();
        bottomBar.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weighty = 0.01;
        gbc.fill = GridBagConstraints.BOTH;
        menuView.add(bottomBar, gbc);
        bottomBar.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-11447983)), null));
        final JLabel label1 = new JLabel();
        label1.setIcon(new ImageIcon(getClass().getResource("/icons/information_icon.png")));
        label1.setText("");
        bottomBar.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_SOUTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        menuView.add(panel1, gbc);
        menuDetailView = new JPanel();
        menuDetailView.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 0.75;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainpanel.add(menuDetailView, gbc);
        menuDetailView.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-11447983)), null));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        mainpanel.add(panel2, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainpanel.add(panel3, gbc);
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel3.add(cancelButton, gbc);
        applyButton = new JButton();
        applyButton.setText("Apply");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel3.add(applyButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainpanel;
    }
}